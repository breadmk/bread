sqlplus "/as sysdba"
--
shutdown immediate;  --진행중인 작업을 완료하고 메모리에서 오라클 제거
shutdown abort;      --진행중인 작업을 멈추고 메모리에서 오라클 제거
startup
conn happy/day
conn /as sysdba
--mount 단계로 이동
shutdown immediate;
startup mount
conn happy/day --X 디비가 오픈되지 않음
conn /as sysdba
alter database open;
conn happy/day
==아카이브 로그 모드
conn /as sysdba
--데이터베이스 모드 확인
select log_mode from v$database;
==데이터베이스 모드 변경:mount 단계에서만 가능
shutdown immediate;
startup mount
archive log list  --archive 모드 확인
--archive 모드로 변경
alter database archivelog;
archive log list
--데이터베이스 오픈
alter database open;
show parameter log_archive_start
--FALSE는 아카이브프로세스를 수동으로 활성화 해야함
--true는 아카이브프로세스가 자동 활성화
==아카이브 프로세스 자동활성화
--1.archive log file 이름결정
show parameter log_archive_format
--2.archive log file 위치지정
d:\ml\arc1, d:\ml\arc2, d:\ml\arc3 생성
alter system 
	set log_archive_dest_1='location=d:\ml\arc1' scope=spfile;
alter system 
	set log_archive_dest_2='location=d:\ml\arc2' scope=spfile;	
alter system 
	set log_archive_dest_3='location=d:\ml\arc3' scope=spfile;	
--3.아카이브프로세스 자동활성화
alter system set log_archive_start=true scope=spfile;
==오라클 재가동
shutdown immediate;
startup
archive log list	
==백업및 복구
create tablespace red
	datafile 'd:\study\db\red.dbf' size 10m;
create tablespace green
	datafile 'd:\study\db\green.dbf' size 10m;
create user uu1
		identified by uu1
		default tablespace red;
create user uu2
		identified by uu2
		default tablespace green;		
grant connect,resource to uu1,uu2;
conn uu1/uu1
create table t1(
a number,
b varchar2(20),
c date);
begin
	for i in 1..100000 loop
		insert into t1 values (i,'머신러닝반',sysdate);
	end loop;
end;
/
select count(*) from t1;
commit;
begin
	for i in 1..50000 loop
		insert into t1 values (i,'머신러닝반',sysdate);
	end loop;
end;
/
select count(*) from t1;   --150000껀
commit;	
--데이터파일 백업
D:\study\db\RED.DBF	파일을 D:\study\backup\RED.DBF 로 복사
D:\study\backup\RED.DBF의 데이터는 --150000껀
--
begin
	for i in 1..70000 loop
		insert into t1 values (i,'머신러닝반',sysdate);
	end loop;
end;
/
select count(*) from t1;   --220000껀
commit;	
시나리오1)데이터베이스 운영중 데이터파일의 손상이 있는 경우
--데이터파일 손상
conn /as sysdba
alter tablespace red offline;
데이터파일손상(D:\study\db\RED.DBF 의 확장자 변경)
alter tablespace red online;    --X
--데이터파일 복원
(D:\study\backup\RED.DBF 을 D:\study\db\RED.DBF로 복사)
--데이터파일 복구
recover tablespace red;    <--아카이브로그적용
alter tablespace red online;
--확인
conn uu1/uu1
select count(*) from t1;
2)데이터베이스 운영중 데이터파일 손상,단)백업본이 없는 경우
conn uu2/uu2
create table test1(
a number,
b varchar2(20),
c date);
begin
for i in 1..200000 loop
	insert into test1 values (i,'개발자반',sysdate);
end loop;
end;
/
commit;
select count(*) from test1;
delete from test1 where a>5000;
commit;
select count(*) from test1;   --5000건
--데이터파일 손상
conn /as sysdba
alter tablespace green offline;
--확장자변경(D:\study\db\GREEN.DBF)
alter tablespace green online;
--데이터파일 경로변경
alter database
	create datafile 'D:\study\db\GREEN.DBF' 
		as 'D:\study\db\newGREEN.DBF';
--데이터 복구
recover tablespace green;
alter tablespace green online;		
conn uu2/uu2
select count(*) from test1;   --5000건
3)startup 시 데이터파일 손상이 있는 경우
--데이터파일 백업
D:\study\db\newgreen.DBF 파일을 D:\study\backup\newgreen.DBF 로 복사
begin
for i in 1..100 loop
	insert into test1 values (i,'개발자반',sysdate);
end loop;
end;
/
select count(*) from test1;   --5100껀
commit;
conn /as sysdba
shutdown immediate;
--데이터파일손상(D:\study\db\newgreen.DBF 파일 확장자 변경)
startup
--데이터파일 복원
D:\study\backup\newgreen.DBF 을 D:\study\db\newgreen.DBF로 복사
--데이터파일 복구
recover tablespace green;  또는
recover database;
--데이터베이스 오픈
alter database open;
conn uu2/uu2;
select count(*) from test1;
==




























