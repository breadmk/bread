1. EMP Table에서 이름, 급여, 커미션 금액, 총액(salt +comm)을 구하여 총액이 많은 순서로 출력하라.
단, 커미션이 NULL인 사람은 제외한다.

select ename, sal, comm, sal+comm 총액 from emp
 where comm is not null
 order by 총액 desc;

2. 10번 부서의 모든 사람들에게 급여의 13%를 보너스로 지불하기로 하였다.
이름, 급여, 보너스 금액, 부서 번호를 출력하라.

select ename, sal, sal*0.13, deptno from emp
 where deptno=10;

3. 30번 부서의 연봉을 계산하여 이름, 부서번호, 급여, 연봉을 출력하라.
단 연말에 급여의 150%를 보너스로 지급한다.

select ename, deptno, sal, sal*12+sal*1.5 from emp
 where deptno=30;

4. 부서번호가 20인 부서의 시간당 임금을 계산하여 출력하라.
단, 1달의 근무일수는 12일이고, 1일 근무시간은 5시간이다.
출력양식은 이름, 급여, 시간당 임금(소수이하 1번째 자리에서 반올림)을 출력하라.

select ename, sal, round(sal/12/5) "시간당 임금" from emp
 where deptno=20;

5. 급여가 $1,500부터 $3,000사이의 사람은 급여의 15%를 회비로 지불하기로 하였다.
이를 이름, 급여, 회비(-2자리에서 반올림)를 출력하라.

select ename, sal, round(sal*0.15,-2) 회비 from emp
 where sal between 1500 and 3000;
 
6. 급여가 $2,000이상인 모든 사람은 급여의 15%를 경조비로 내기로 하였다.
이름, 급여, 경조비(소수점 이하 절삭)를 출력하라.

select ename, sal, floor(sal*0.15) 경조비 from emp
 where sal >= 2000;


///////근무일수는 +1을 고려하지 않고 현재날짜와 입사일의 차로 계산했음

7. 입사일부터 지금까지의 날짜수를 출력하라.
부서번호, 이름, 입사일, 현재일, 근무일수(소수점 이하 절삭), 근무년수, 근무월수(30일 기준), 근무주수를 출력하라.

select deptno, ename, hiredate, sysdate, floor(sysdate-hiredate) 근무일수 from emp;

select deptno, ename, hiredate, sysdate, floor(sysdate-hiredate) 근무일수, floor((sysdate-hiredate)/365) 근무년수,
 floor((sysdate-hiredate)/30) 근무월수, floor((sysdate-hiredate)/7) 근무주수 from emp;


8. 모든 사원의 실수령액을 계산하여 출력하라.
단 급여가 많은 순으로 이름, 급여, 실수령액을 출력하라(실수령액은 급여에 대해 10%의 세금을 뺀 금액)

select ename, sal, sal*0.9 실수령액 from emp
 order by sal desc;


9. 입사일로부터 90일이 자난 후의 사원 이름, 입사일, 90일 후의 날, 급여를 출력하라.

select ename, hiredate, hiredate+90, sal from emp
 where sysdate-hiredate >=90;


10. 입사일로부터 6개월이 지난 후의 입사일, 6개월 후의 날짜, 급여를 출력하라.

select hiredate, add_months(hiredate,6), sal from emp
 where months_between(sysdate, hiredate) >= 6;


11. 입사한 달의 근무일수를 계산하여 부서번호, 이름, 근무일수를 출력하라.

select deptno, ename, last_day(hiredate)-hiredate 근무일수 from emp;


12. 모든 사원의 60일이 지난 후의 ‘MONDAY'는 몇 년, 몇 월, 몇 일 인가를 구하여 이름, 입사일, ’MONDAY'를 출력하라.

select ename, hiredate, next_day(hiredate+60,'월') from emp;

select ename, hiredate, to_char(next_day(hiredate+60,'월'),'yyyy"년" mm"월" dd"일"') "다음 월요일" from emp;


13. 입사일로부터 오늘까지의 일수를 구하여 이름, 입사일, 근무일수를 출력하라.

select ename, hiredate, floor(sysdate-hiredate) 근무일수 from emp;


14. 입사일을 ‘1996년 5월 14일’의 형태로 이름, 입사 일을 출력하라.

select ename, to_char(hiredate,'yyyy"년" mm"월" dd"일"') 입사일 from emp;
select ename, hiredate from emp;


15. 이름의 글자수가 6자 이상인 사람의 이름을 앞에서 3자만 구하여 소문자로 이름만을 출력하라.

select lower(substr(ename,1,3)) from emp
 where length(ename)>=6 ;


16. 10번 부서 월급의 평균, 최고, 최저 인원수를 구하여 출력하라.

select avg(sal), max(sal), min(sal), count(*) from emp 
 group by deptno
 having deptno=10;


17. 각 부서별 급여의 평균, 최고, 최저, 인원수를 구하여 출력하라.

select deptno, avg(sal), max(sal), min(sal), count(*) from emp
 group by deptno;


18. 각 부서별 같은 업무를 하는 사람의 인원수를 구하여 부서번호, 업무명, 인원수를 출력하라.

select deptno, job, count(*) from emp
 group by deptno, job
 order by deptno;


19. 같은 업무를 하는 사람의 수가 4명 이상인 업무와 인원수를 출력하라.

select job, count(*) from emp
 group by job
 having count(*)>=4;


20. 각 부서별 평균 월급, 전체월급, 최고 월급, 최저월급을 구하여 평균 월급이 많은 순으로 출력하라.

select deptno, avg(sal), sum(sal), max(sal), min(sal) from emp
 group by deptno
 order by avg(sal) desc;
조인실습 답 =======================
1.EMP와 DEPT TABLE을 JOIN하여 부서번호, 부서명, 이름, 급여를 출력하라.

 

  

conn scott/tiger

 

--풀이1

select deptno, dname, ename, sal from dept

	join emp using (deptno);

 

--풀이2  

 

select d.deptno, dname, ename, sal from dept d

	join emp e on d.deptno=e.deptno;

 

 

2.이름이 ‘ALEEN'인 사원의 부서명을 출력하라.

 

select dname from dept d, emp e 

	where d.deptno=e.deptno and ename = 'ALEEN';

 

 

(수정)

이름이 ‘ALLEN'인 사원의 부서명을 출력하라.

 

select dname from dept d, emp e 

	where d.deptno=e.deptno and ename = 'ALLEN';

 

 

 

3.DEPT Table에 있는 모든 부서를 출력하고, EMP Table에 있는 DATA와 JOIN하여 모든 사원의 이름, 부서번호, 부서명, 급여를 출력하라.

 

select ename,d.deptno, dname, sal from dept d

	left outer join emp e on d.deptno=e.deptno; 

  

 

 

 

4.EMP Table에 있는 EMPNO와 MGR을 이용하여 서로의 관계를 다음과 같이 출력하라.

 

‘SMITH'의 매니저는 FORD이다.’

 

 select e1.ename||'의 매니저는 '||e2.ename||'이다.'  from emp e1, emp e2

	where e1.mgr=e2.empno; 

 

 

5.'ALLEN'의 직무와 같은 사람의 이름, 부서명, 급여 직무를 출력하라.

 

select job from emp where ename = 'ALLEN';

 

select ename, dname, sal, job from emp e, dept d

	where e.deptno=d.deptno and job=(select job from emp where ename = 'ALLEN');

 

 

6.‘JONES'가 속해있는 부서의 모든 사람의 사원번호, 이름, 입사일, 급여를 출력하라.

 

select deptno from emp where ename = 'JONES';

 

select empno, ename, hiredate, sal from emp

	where deptno= (select deptno from emp where ename = 'JONES');

 

 

 

7.전체 사원의 평균 임금보다 많은 사원의 사원번호, 이름, 부서명, 입사일, 지역, 급여를 출력하라.

 

 

 

select avg(sal) from emp;

  

select empno, ename, dname, hiredate, loc, sal from emp e, dept d

	where e.deptno=d.deptno and sal > (select avg(sal) from emp);

 

 

 

 

8.10번 부서 사람들 중에서 20번 부서의 사원과 같은 업무를 하는 사원의 사원번호, 이름, 부서명, 입사일, 지역을 출력하라.

 

select job from emp where deptno=20;

 

select empno, ename, dname, hiredate, loc from emp e, dept d

	where e.deptno=d.deptno and d.deptno=10 and job in (select job from emp where deptno=20);

 

 

9.10번 부서 중에서 30번 부서에는 없는 업무를 하는 사원의 사원번호, 이름, 부서명, 입사일, 지역을 출력하라.

 

select job from emp where deptno=30;  

 

select empno, ename, dname, hiredate, loc from emp e, dept d

	where e.deptno=d.deptno and d.deptno=10 and job not in (select job from emp where deptno=30);

  

 

10.10번 부서와 같은 일을 하는 사원번호, 이름, 부서명, 지역, 급여를 급여가 많은 순으로 출력하라.

 

select job from emp where deptno=10;

 

select empno, ename, dname, loc, sal from emp e, dept d

	where e.deptno=d.deptno and job in (select job from emp where deptno=10)

	order by sal desc;

 

 

 

11.'MARTIN' 이나 ‘SCOTT'의 급여와 같은 사원의 사원번호, 이름, 급여를 출력하라.

 

select sal from emp where ename in ('MARTIN','SCOTT');  

 

select empno, ename, sal from emp

	where sal in (select sal from emp where ename in ('MARTIN','SCOTT'));

 

 

 

12.급여가 30번 부서의 최고 급여보다 높은 사원의 사원번호, 이름, 급여를 출력하라.

 

select max(sal) from emp where deptno=30;  

 

select empno, ename, sal from emp

	where sal > (select max(sal) from emp where deptno=30);

 

  

 

 

13.급여가 30번 부서의 최저 급여보다 높은 사원의 사원번호, 이름, 급여를 출력하라. 

 

select min(sal) from emp where deptno=30;  

 

select empno, ename, sal from emp

	where sal > (select min(sal) from emp where deptno=30);
 


========================
conn scott/tiger
select * from tab;
select * from emp;
--e1 사번,이름,급여,입사일컬럼을 가지는 빈테이블
create table e1
	as
	select empno,ename,sal,hiredate from emp
		where 1=2;
select * from e1;
desc e1;
--e2 사번,이름,직책,취미 컬럼을 가지는 빈테이블
create table e2
	as
	select empno,ename,job,'null' hobby from emp
		where 1=2;
select * from e2;
desc e2;
--e1,e2 테이블에 동시에 데이터 입력, 단)취미는 '등산'으로 
insert all
	into e1 (empno,ename,sal,hiredate)
		values (empno,ename,sal,hiredate)
	into e2 (empno,ename,job,hobby) 
		values (empno,ename,job,'등산')
	select  empno,ename,sal,hiredate,job from emp;
--컬럼 자리수 조정
alter table e2
	modify hobby varchar2(10);
desc e2	
insert all
	into e1 (empno,ename,sal,hiredate)
		values (empno,ename,sal,hiredate)
	into e2 (empno,ename,job,hobby) 
		values (empno,ename,job,'등산')
	select  empno,ename,sal,hiredate,job from emp;
select * from emp;
select * from e1;
select * from e2;
--테이블 삭제
drop table e1;
drop table e2;
select * from tab;
--휴지통비우기
purge recyclebin;
select * from tab;
--병합(입력+수정)
conn happy/day
create table d3
	as
	select * from dept;
select * from d3;
create table d4
	as
	select * from dept where deptno>=30;	
select * from d4;
insert into d4 values (50,'기획1팀','서산');
insert into d4 values (60,'기획2팀','양양');
select * from d4;	
update d4 set dname='전산1팀',loc='단양' where deptno=30;
update d4 set dname='전산2팀',loc='단양' where deptno=40;
select * from d4;	
--d3 테이블에 d4를 병합(입력,수정)
merge into d3 
		using d4
		on (d3.deptno=d4.deptno)
		when matched then   --부서번호가 일치하는게 있다면
			update set d3.dname=d4.dname,
						d3.loc=d4.loc
		when not matched then
			insert values (d4.deptno,d4.dname,d4.loc);
select * from d3;
select * from d4;
--데이터 딕션어리(dictionary)
dba_xxxxxs
user_xxxxxs
all_xxxxxs
select * from dictionary;
conn system/1234
select * from dictionary;
desc dictionary
--오라클의 테이블스페이스 정보
select TABLE_NAME from dictionary 
	where table_name like '%TABLESPACE%';
desc DBA_TABLESPACES
select TABLESPACE_NAME,STATUS from dba_tablespaces;
--오라클이 사용하는 데이터 파일정보
select table_name from dictionary 
	where table_name like '%DATA%';
desc DBA_DATA_FILES	
select FILE_ID,TABLESPACE_NAME,FILE_NAME,BYTES
	from DBA_DATA_FILES;
--오라클의 사용자 정보
select table_name from dictionary 
	where table_name like '%USER%';
desc dba_users;
select USERNAME,DEFAULT_TABLESPACE,ACCOUNT_STATUS, LOCK_DATE,
		PROFILE from dba_users;
==해피사용자의 테이블의 위치 확인
conn happy/day
select table_name from dictionary 
	where table_name like '%TABLE%';
desc 	USER_TABLES	
select TABLE_NAME,  TABLESPACE_NAME from user_tables;	
==잠긴계정풀기
conn system/1234
conn hr/hr
conn system/1234
alter user hr
		identified by hr    --암호변경
		account unlock;
conn hr/hr
select * from tab;
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn happy/ddd
conn system/1234
alter user happy
	account unlock;
conn happy/day
select * from tab;
==사원테이블에서 급여를 많이 받는 순으로 3명까지 이름,급여,직책 출력
desc sawon
select rowid,rownum,saname,sapay,sajob from sawon;
--rowid : 저장위치
--rownum : 조회된 순서번호
select rownum,saname,sapay,sajob from sawon
	order by sapay desc;
select * from (select saname,sapay,sajob from sawon
	order by sapay desc);
select rownum,saname,sapay,sajob 
	from (select saname,sapay,sajob from sawon 
			order by sapay desc);	
select rownum,saname,sapay,sajob 
	from (select saname,sapay,sajob from sawon 
			order by sapay desc)
	where rownum<=3;
--퍼스널테이블에서 가장 오래 근무순서대로 5명을 이름,입사일,급여 출력하세요
select * from personnel order by startdate;
select pname,startdate,pay 
	from (select * from personnel order by startdate)
	where rownum<=5;
==트랜잭션:프로세스가 처리되는 최소단위
  commit-트랜잭션 정상처리, rollback-트랜잭션 이전상태로
DDL :오라클 db, tablespace,object등을  생성,수정,삭제해주는 명령어
     auto commit 수행
DCL : 사용자에게 권한을 부여,박달
     auto commit 수행	 
DML :데이터 조작언어, 테이블에 데이터를 입력,수정,삭제,병합할수 있게 해주는 명령어
	트랜잭션의 대상
--- 사용자 a 
입력 100건
조회 50건
수정 100
점심
전원 off

--- 사용자 b  <-입력 100건
입력 100건
조회 30건
사용자 아이디 생성
조회 20건
수정 90
점심
전원 off

--- 사용자 c <-입력 100건, 수정 50
입력 100건
조회 50건
수정 50
테이블 생성 1건
수정 10
점심
전원 off
세션1---
select * from division;
세션2---
select * from division;
세션1---
delete division where dno=30;
select * from division;
세션2---
select * from division;
update division set position='강릉';
세션1---
commit;
delete division where dno<30;
세션2---
rollback;
==오라클 삭제(https://wookoa.tistory.com/304)
1)오라클 서비스 중지
2)프로그램및기능-오라클 삭제
3)오라클 설치폴더 삭제 (C:\oraclexe)
4)윈도우+R - regedit 
- HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE 삭제
- HKEY_LOCAL_MACHINE\SYSEM\ControlSet001\Service Oralce 키워드 삭제
- HKEY_LOCAL_MACHINE\SYSEM\ControlSet002\Service Oracle 키워드 삭제
- HKEY_LOCAL_MACHINE\SYSEM\CurrentControlSet\Services Oracle 키워드 삭제
- HKEY_CLASSES_ROOT에서 Ora로 시작되는 모든 것 삭제
5)재부팅후 재설치
==
--1)테이블스페이스 생성
create tablespace autumn
	datafile 'D:\study\db\autumn.dbf' size 10m;
--2)사용자 생성
create user happy
		identified by day
		default tablespace autumn;
--3)권한부여
grant connect, resource to happy;		
--4)사용자 접속
conn happy/day
@d:\study\oracle\data.txt
select * from tab;
--scott 사용자 생성(scott.sql)
conn system/1234
create user scott
	identified by TIGER;
@C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql
show user
select * from tab;
conn system/1234
alter user scott
	identified by tiger;















