윈도우+r - cmd - sqlplus happy/day
--personnel 구조확인
desc 테이블명
desc personnel
select * from personnel;
--personnel 테이블에서 사번,이름,직책,급여,보너스,합계
select pno,pname,job,pay,bonus,pay+bonus from personnel;
--nvl(표현식,값)
select pno,pname,job,pay,nvl(bonus,0) from personnel;
select pno,pname,job,pay,nvl(bonus,'없음') from personnel;
select pno,pname,job,pay,bonus,pay+nvl(bonus,0) from personnel;
--컬럼명에 알리아스(별칭) 
select pno 사번,pname name,job Job,pay,
	bonus 보너스,pay+nvl(bonus,0) Total from personnel;
select pno 사번,pname "name",job "Job",pay "급 여",
	bonus 보너스,pay+nvl(bonus,0) "Total" from personnel;
--퍼스널테이블에서 직책 출력
select job from personnel;
select distinct job from personnel;
--이름,직책, 급여출력(단 급여가 3000이상) 
select pname,job,pay from personnel 
	where pay>=3000;
--이름,직책, 급여출력(단 직책이 매니져인 사람)
select pname,job,pay from personnel
	where job='manager';
select pname,job,pay from personnel
	where job='MANAGER';	
--이름,직책, 급여출력(단 직책이 매니져 또는 세일즈맨인 사람)	
select pname,job,pay from personnel	
	where job='MANAGER' or job='SALESMAN';
select pname,job,pay from personnel	
	where job in ('MANAGER','SALESMAN');
--이름,직책, 급여출력(단 급여가 1000이상 2000 이하)
select pname,job,pay from personnel	
	where pay>=1000 and pay<=2000;
==>between a and b :a 에서 b 사이
select pname,job,pay from personnel	
	where pay between 1000 and 2000;
--이름,직책, 급여출력(단 직책이 세일즈맨이 아닌사람)
select pname,job,pay from personnel	
	where job!='SALESMAN';
select pname,job,pay from personnel	
	where job<>'SALESMAN';	
--이름,직책,급여,보너스 출력(단 보너스를 받는사람)
select pname,job,pay,bonus from personnel
	where bonus >0;
--이름,직책,급여,보너스 출력(단 보너스를 받지 않는 사람)	
select pname,job,pay,bonus from personnel
	where bonus <=0;
--이름,급여,보너스 출력(보너스가 널인사람)
select pname,pay,bonus from personnel
	where bonus=null;   --X
select pname,pay,bonus from personnel
	where bonus is null;	
--이름,급여,보너스 출력(보너스가 널이 아닌 사람)	
select pname,pay,bonus from personnel
	where bonus is not null;
==>
select pname,pay,bonus from personnel
	where bonus is null or bonus=0;
--컬럼 길이 조절
select pno,pname,job,pay from personnel;
col job format a10
col pname format a10
select pno,pname,job,pay from personnel;
col pay format a6
select pno,pname,job,pay from personnel;
col pay format 99,999
select pno,pname,job,pay from personnel;
--연결연산자(||)
--이름,직책,급여 출력
select pname,job,pay from personnel;
select pname||job||pay from personnel;
select pname||'의 직책은'||job||'이고 급여는 '||pay from personnel;
--%:여러 문자열, _:문자하나
--이름,직책,급여 출력(단 이름이 5글자인사람)
select pname,job,pay from personnel
	where pname like '_____';
--이름,직책,급여 출력(단 이름의 두번째 글자가 A인사람)
select pname,job,pay from personnel
	where pname like '_A%';
--이름,직책,급여 출력(단 이름이 J로 시작하는 사람)	
select pname,job,pay from personnel
	where pname like 'J%';
--이름,직책,급여 출력(단 이름이 N로 끝나는 사람)
select pname,job,pay from personnel
	where pname like '%N';
==========
select * from tab;
@D:\study\oracle\data.txt	
select * from tab;	
@D:\study\oracle\data.txt	
--휴지통비우기
purge recyclebin;	
select * from tab;
==합집합, 교집합, 차집합
desc dept
select * from dept;
create table d1
	as
	select * from dept;
select * from tab;
select * from d1;
create table d2
	as
	select * from dept where deptno>20;
select * from d2;
insert into d2 values (99,'기획부','서산');
insert into d2 values (88,'이벤트','제주');
select * from d1;
select * from d2;
--합집합
select * from d1
	union 
	select * from d2;
select * from d1
	union all
	select * from d2;
--교집합
select * from d1
	intersect 
	select * from d2;
--차집합
select * from d1
	minus
	select * from d2;
select * from d2
	minus
	select * from d1;		
--정렬
select * from personnel;
select * from personnel
	order by pay;
select * from personnel
	order by pay desc;
select * from personnel	
	order by job asc;
select * from personnel	
	order by job asc,pay desc;	
==실습==
--사용자는 scott으로 함,테이블은 emp
--1.부서번호가 10번인 부서의 사람중 사원번호, 이름, 월급출력 
select empno, ename, sal from emp where deptno=10;
--2.사원번호가 7369인 사람중 이름,입사일, 부서번호를출력
select ename, hiredate, deptno from emp where empno=7369;
--3.이름이 ALLEN인 사람의 모든 정보출력
select * from emp where ename='ALLEN';
--4.입사일이 83/01/12인 사원의 이름,부서번호,월급출력
select ename, deptno, sal from emp where hiredate='83/01/12';
--5.직업이 MANAGER가 아닌사람의 모든정보 출력
select * from emp where job != 'MANAGER';
--6.입사일이 81/04/02 이후에 입사한 사원의 정보출력
select * from emp where hiredate >= '81/04/02';
--7.급여가 800 이상인 사람의 이름, 급여,부서번호 출력
select ename, sal, deptno from emp where sal >= 800;
--8.부서번호가 20번 이상인 사원의 모든 정보 출력
select * from emp where deptno >= 20;
--10.입사일이 81/02/09 보다 먼저 입사한 사람들의 모든 정보 출력
select * from emp where hiredate < '81/02/09';
--11.입사번호가 7698보다 작거나 같은사람들의 입사번호와 이름 출력
select empno, ename from emp where empno <= 7698;
==함수
conn happy/day
select * from sawon;
select * from dept;
select 10/7 from sawon;
select 10/7 from dept;	
select 10/7 from dual;
select * from dual;
select 10/7, ceil(10/7),floor(10/7) from dual;
select 10/7,round(10/7,3),trunc(10/7,3) from dual;
select 1000/7,round(1000/7,-2),trunc(1000/7,-2) from dual;
--사원테이블에서 이름,급여,월급,세금출력
월급=급여/12, 단 50원이상 반올림하여 백단위 표현
세금은 급여의 3%로 원단위 절삭
select saname,sapay from sawon;
select saname,sapay,sapay/12 월급,sapay*0.03 세금 from sawon;
select saname,sapay,round(sapay/12,-2) 월급,
	trunc(sapay*0.03,-1) 세금 from sawon;
select mod(10,3),abs(-777),sign(-777),power(2,4) from dual;
select pname,lower(pname),initcap(pname),upper(pname)
	from personnel;
select concat(pname,job),pname||job from personnel;
select concat(pname,job),pname||job||pay from personnel;	
select length('happy'),length('경영기술개발원')	from dual;
select lengthb('happy'),lengthb('경영기술개발원')	from dual;
select 'abcdefghijk', substr('abcdefghijk',3),
		substr('abcdefghijk',5,2) from dual;
select 'oraora',lpad('oraora',15,'*') from dual;
select 'oraora',rpad('oraora',15,'!') from dual;
--decode(표현식,조건1,값1,조건2,값2,조건3,값3,...)		
select pname,job,pay from personnel;
MANAGER이면 급여의 10%를 incentive
SALESMAN        15%
PRESIDENT       20%
select pname,job,pay,
	decode(job,'MANAGER',pay*0.1,'SALESMAN',pay*0.15,
		'PRESIDENT',pay*0.2) incentive from personnel;
--사원테이블에서 이름,부서,부서명출력
단, 부서번호가 10 이면 총무부
           20     영업부
		   30     전산부
		   40     관리부
select saname,deptno,decode(deptno,10,'총무부',20,'영업부',
		30,'전산부',40,'관리부')	 부서명 from sawon;
select * from gogek;
--고객테이블에서 고객명,주민번호,성별출력
select goname,gojumin,substr(gojumin,8,1) from gogek;
select goname,gojumin,
	decode(substr(gojumin,8,1),1,'남',2,'여') 성별 from gogek;
--날짜함수
select sysdate from dual;
--날짜-날짜=숫자
select pname,startdate from personnel;
select pname,sysdate-startdate 근무일수 from personnel;
--날짜+숫자=날짜
select sysdate+3 from dual;
select sysdate from dual;
alter session
	set nls_date_format='yyyy-mm-dd hh:mi:ss';
select sysdate from dual;
alter session
	set nls_date_format='yyyy-mm-dd hh:mi:ss am';
select sysdate from dual;
alter session
	set nls_date_format='yyyy-mm-dd hh:mi:ss am bc';
select sysdate from dual;
alter session
	set nls_date_format='yyyy-mm-dd hh24:mi:ss bc';
select sysdate from dual;
==스콧사용자로 
--12.입사일이 81/04/02보다 늦고 82/12/09보다 빠른 사원의 이름,월급,부서번호 출력

select ename, sal, deptno from emp where hiredate > '81/04/02' and hiredate < '82/12/09';

--13.급여가 1600보다 크고 3000보다 작은 사람의 이름,직업, 급여 출력

select ename, job, sal from emp where sal > 1600 and sal < 3000;

--14.사원번호가 7654와 7782사이 이외의 사원의모든 정보출력

select * from emp where empno!=7654 and empno != 7782;

--16.입사일이 81년 이외에 입사한 사람의 모든 정보 출력

select * from emp where hiredate < '81/01/01' or hiredate > '81/12/31';

--17.직업이 MANAGER와 SALESMAN인 사람의 모든 정보 출력

select * from emp where job='MANAGER' or job='SALESMAN';

--18.부서번호가 20,30번을 제외한 모든 사람의 이름, 사원번호, 부서번호 출력

select ename, empno, deptno from emp where deptno != 20 and deptno != 30;

--19.이름이 S로 시작하는사원의 사원번호, 이름, 입사일, 부서번호 출력

select empno, ename, hiredate, deptno from emp where ename like 'S%';

--20.입사일이 81년도인 사람의 모든 정보 출력

select * from emp where hiredate > '80/12/31' and hiredate < '82/01/01';

--21.이름중 S자가들어가 있는 사람만 모든정보 출력

select * from emp where ename like '%S%';

--22.이름이 S로시작하고 마지막 글자가 T인 사람의 모든 정보 출력(단 이름은 전체 5자리)

select * from emp where ename like 'S___T';

--23.첫번째 문자는관계없고 두번째 문자가 A인사람의 정보출력

select * from emp where ename like '_A%';

--24.커미션이 NULL인사람의 정보를출력

select * from emp where comm is null;

--25.커미션이 NULL이아닌 사람의 모든 정보 출력

select * from emp where comm is not null;

--26.부서가 30번부서이고 급여가1500이상인 사람의 이름, 부서,우러급출력

select ename, deptno, sal from emp where deptno = 30 and sal >= 1500;

--27.이름의 첫글자가 K로 시작하거나부서번호가 30번인사람의 사원번호, 이름, 부서번호 출력

select empno, ename, deptno from emp where ename like 'K%' or deptno=30;

--28.급여가 1500이상이고 부서번호가 30번인 사원중 직업이 MANAGER인 사람의 정보출력

select * from emp where sal >= 1500 and deptno = 30 and job='MANAGER';

--29.부서번호가 30번인 사람중 사원번호 정렬하라

select * from emp where deptno=30 order by empno;

--30.급여가 많은 순 정렬

select * from emp order by sal desc;

--31.부서번호로 오름차순 정렬후 급여많은순 출력

select * from emp order by deptno , sal desc;

--32.부선번호로 내림차순정렬하고 이름순 오름차순, 급여순 내림차순 정렬

select * from emp order by deptno desc, ename, sal desc;



--날짜+숫자/24
--날자+숫자/1440
	
		   
		   
		   


	




	
	
	
	
	
	
	
	
	
	
	




